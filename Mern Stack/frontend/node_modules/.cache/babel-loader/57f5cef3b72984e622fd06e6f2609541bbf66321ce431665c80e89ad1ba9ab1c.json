{"ast":null,"code":"var _jsxFileName = \"/Users/jiashunli/Desktop/legendary-waffle/Mern Stack/frontend/src/pages/projectSearchRes.js\",\n  _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport TinderCard from 'react-tinder-card';\nimport styles from \"./projectSearchRes.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  // Extract search tag from query parameter\n  const searchTag = useMemo(() => {\n    const params = new URLSearchParams(window.location.search);\n    return params.get('tag') || '';\n  }, []);\n\n  // Extract search keywords from query parameter\n  const searchKeyword = useMemo(() => {\n    const params = new URLSearchParams(window.location.search);\n    return params.get('search') || '';\n  }, []);\n\n  // Authentication & Projects\n  const {\n    user\n  } = useAuthContext();\n  const [searchResults, setSearchResults] = useState([]);\n\n  // Store query from database\n  const resultQueue = useRef([]);\n\n  // Store reference & value of index to the last element of current queue\n  const lastRef = useRef(0);\n  const [last, setlast] = useState(0);\n\n  // Store reference to the TinderCard compoenents\n  const proRef = useRef([]);\n\n  // Helpers for re-rendering & refetching\n  const [cardContainerKey, setCardContainerKey] = useState(0);\n  const [refresh, setRefresh] = useState(true);\n  useEffect(() => {\n    const fetchResults = async () => {\n      if (user) {\n        const response = await fetch(`/api/projects/search/${searchTag}/${searchKeyword}`, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${user.token}`\n          }\n        });\n        const data = await response.json();\n        setSearchResults(data);\n      }\n    };\n    if (user) {\n      console.log(\"fetching projects\");\n      fetchResults();\n    }\n  }, [user, refresh]);\n\n  // Set the queues\n  useEffect(() => {\n    if (Array.isArray(searchResults)) {\n      console.log(\"updating queues\");\n      resultQueue.current = searchResults;\n      lastRef.current = searchResults.length - 1;\n      setlast(lastRef);\n      proRef.current = Array(searchResults.length).fill(0).map(i => /*#__PURE__*/React.createRef());\n      setCardContainerKey(prevKey => prevKey + 1);\n    }\n  }, [searchResults]);\n\n  // Update current index\n  const updateIndex = val => {\n    lastRef.current = val;\n    setlast(val);\n  };\n\n  // When card leaves the screen\n  const outOfFrame = (title, index) => {\n    console.log(title);\n    lastRef.current >= index && proRef.current[index].current.restoreCard();\n  };\n\n  // Regret button\n  const goBack = async () => {\n    const newIndex = last + 1;\n    updateIndex(newIndex);\n    await proRef.current[newIndex].current.restoreCard();\n  };\n\n  // Reset queue\n  const reset = () => {\n    setRefresh(!refresh);\n    setCardContainerKey(prevKey => prevKey + 1);\n  };\n  const highlightText = (text, keyword) => {\n    if (!keyword) {\n      return text;\n    }\n    const regex = new RegExp(`(${keyword})`, 'gi');\n    return text.replace(regex, '<span class=\"highlight\">$1</span>');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-info\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total search results: \", searchResults.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: resultQueue.current && resultQueue.current.map((project, index) => /*#__PURE__*/_jsxDEV(TinderCard, {\n        ref: proRef.current[index],\n        onSwipe: () => updateIndex(index - 1),\n        onCardLeftScreen: () => outOfFrame(project.title, index),\n        preventSwipe: \"down\",\n        className: \"cards\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: project.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text mb-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-people\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 15\n              }, this), \" Teammates: \", project.nums]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tags\",\n              children: project.tags.map(tag => {\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"card-tag badge bg-primary\",\n                  children: tag\n                }, tag, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 24\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-des\",\n            children: project.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this)\n      }, project._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this))\n    }, cardContainerKey, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goBack,\n      className: \"button-51\",\n      children: \"Regret button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: reset,\n      className: \"button-51\",\n      children: \"Show results again?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"STwzEu/5auWwyWhzZXvPCiaOzP0=\", false, function () {\n  return [useAuthContext];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useMemo","useAuthContext","React","useEffect","useState","useRef","TinderCard","styles","Home","searchTag","params","URLSearchParams","window","location","search","get","searchKeyword","user","searchResults","setSearchResults","resultQueue","lastRef","last","setlast","proRef","cardContainerKey","setCardContainerKey","refresh","setRefresh","fetchResults","response","fetch","headers","token","data","json","console","log","Array","isArray","current","length","fill","map","i","createRef","prevKey","updateIndex","val","outOfFrame","title","index","restoreCard","goBack","newIndex","reset","highlightText","text","keyword","regex","RegExp","replace","project","nums","tags","tag","description","_id"],"sources":["/Users/jiashunli/Desktop/legendary-waffle/Mern Stack/frontend/src/pages/projectSearchRes.js"],"sourcesContent":["import { useMemo } from 'react';\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport TinderCard from 'react-tinder-card'\nimport styles from \"./projectSearchRes.css\"\n\n\nconst Home = () => {\n\n  // Extract search tag from query parameter\n  const searchTag = useMemo(() => {\n    const params = new URLSearchParams(window.location.search);\n    return params.get('tag') || '';\n  }, []);\n\n  // Extract search keywords from query parameter\n  const searchKeyword = useMemo(() => {\n    const params = new URLSearchParams(window.location.search);\n    return params.get('search') || '';\n  }, []);\n\n  // Authentication & Projects\n  const { user } = useAuthContext()\n  const [searchResults, setSearchResults] = useState([])\n\n  // Store query from database\n  const resultQueue = useRef([])\n\n  // Store reference & value of index to the last element of current queue\n  const lastRef = useRef(0)\n  const [last, setlast] = useState(0)\n\n  // Store reference to the TinderCard compoenents\n  const proRef = useRef([])\n\n  // Helpers for re-rendering & refetching\n  const [cardContainerKey, setCardContainerKey] = useState(0);\n  const [refresh, setRefresh] = useState(true)\n\n\n  useEffect(() => {\n    const fetchResults = async () => {\n      if (user) {\n        const response = await fetch(`/api/projects/search/${searchTag}/${searchKeyword}`, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${user.token}`\n          },\n        });\n        const data = await response.json();\n        setSearchResults(data);\n      }\n    }\n\n    if (user) {\n      console.log(\"fetching projects\")\n      fetchResults()\n    }\n  }, [user, refresh])\n\n\n  // Set the queues\n  useEffect(() => {\n    if (Array.isArray(searchResults)){\n      console.log(\"updating queues\")\n      resultQueue.current = searchResults\n      lastRef.current = searchResults.length - 1 \n      setlast(lastRef)\n      proRef.current = Array(searchResults.length).fill(0).map((i) => React.createRef())\n      setCardContainerKey(prevKey => prevKey + 1);\n    }\n  }, [searchResults])\n\n  // Update current index\n  const updateIndex = (val) => {\n    lastRef.current = val\n    setlast(val)\n  }\n\n  // When card leaves the screen\n  const outOfFrame = (title, index) => {\n    console.log(title)\n    lastRef.current >= index && proRef.current[index].current.restoreCard()\n  }\n  \n  // Regret button\n  const goBack = async () => {\n    const newIndex = last + 1\n    updateIndex(newIndex)\n    await proRef.current[newIndex].current.restoreCard()\n  }\n\n  // Reset queue\n  const reset = () => {\n    setRefresh(!refresh)\n    setCardContainerKey(prevKey => prevKey + 1);\n  }\n\n  const highlightText = (text, keyword) => {\n    if (!keyword) {\n      return text;\n    }\n    const regex = new RegExp(`(${keyword})`, 'gi');\n    return text.replace(regex, '<span class=\"highlight\">$1</span>');\n  };\n\n\n  return (\n     \n    <div>\n\n\n    <div className=\"result-info\">\n      <p>Total search results: {searchResults.length}</p>\n    </div>\n    <div className=\"card-container\" key={cardContainerKey}>\n    {resultQueue.current && resultQueue.current.map((project, index) =>\n      <TinderCard key={project._id} \n        ref = {proRef.current[index]}\n        onSwipe ={() => updateIndex(index - 1)} \n        onCardLeftScreen = {() => outOfFrame(project.title, index)}\n        preventSwipe={\"down\"} \n        className=\"cards\"\n        >\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{project.title}</h5>\n          <div className=\"d-flex justify-content-between\">\n            <p className=\"card-text mb-0\">\n              <i className=\"bi bi-people\"></i> Teammates: {project.nums}\n            </p>\n            <div className=\"tags\">\n              {project.tags.map(tag => {\n                return <span key={tag} className=\"card-tag badge bg-primary\">\n                  {tag}\n                </span>\n              })}\n            </div>\n          </div>\n          <hr />\n          <p className=\"card-des\">{project.description}</p>\n        </div>\n    </TinderCard>\n  )}\n\n  </div>\n\n\n      <button onClick={goBack} className=\"button-51\">Regret button</button>\n      <button onClick={reset} className=\"button-51\">Show results again?</button>\n  \n  </div>\n)\n\n};\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}