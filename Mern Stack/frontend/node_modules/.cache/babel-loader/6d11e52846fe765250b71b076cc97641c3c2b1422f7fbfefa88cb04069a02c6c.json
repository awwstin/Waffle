{"ast":null,"code":"var _jsxFileName = \"/Users/jiashunli/Desktop/legendary-waffle/Mern Stack/frontend/src/components/ProjectCard.js\",\n  _s = $RefreshSig$();\nimport styles from \"./projectCard.css\";\nimport React from \"react\";\nimport TinderCard from 'react-tinder-card';\nimport { useEffect, useState, useRef } from 'react';\nimport { useProjectsContext } from \"../hooks/useProjectsContext\";\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectCard = () => {\n  _s();\n  // Authentication & Projects\n  const {\n    projects,\n    dispatch\n  } = useProjectsContext();\n  const {\n    user\n  } = useAuthContext();\n\n  // Store query from database\n  const resultQueue = useRef([]);\n\n  // Store reference & value of index to the last element of current queue\n  const lastRef = useRef(0);\n  const [last, setlast] = useState(0);\n\n  // Store reference to the TinderCard compoenents\n  const proRef = useRef([]);\n\n  // Helpers for re-rendering & refetching\n  const [cardContainerKey, setCardContainerKey] = useState(0);\n  const [refresh, setRefresh] = useState(true);\n\n  // Refresh the queue on refreshing the page\n  useEffect(() => {\n    // Fetch all projects\n    const fetchProjects = async () => {\n      const response = await fetch('/api/projects', {\n        headers: {\n          'Authorization': `Bearer ${user.token}`\n        }\n      });\n      const json = await response.json();\n      if (response.ok) {\n        dispatch({\n          type: 'SET_PROJECTS',\n          payload: json\n        });\n      }\n    };\n    if (user) {\n      console.log(\"fetching all projects\");\n      fetchProjects();\n    }\n  }, [user, refresh]);\n\n  // Set the queues\n  useEffect(() => {\n    if (Array.isArray(projects)) {\n      console.log(\"updating queues\");\n      resultQueue.current = projects;\n      lastRef.current = projects.length - 1;\n      setlast(lastRef);\n      proRef.current = Array(projects.length).fill(0).map(i => /*#__PURE__*/React.createRef());\n    }\n  }, [projects]);\n\n  // Update current index\n  const updateIndex = val => {\n    lastRef.current = val;\n    setlast(val);\n  };\n\n  // When card leaves the screen\n  const outOfFrame = (title, index) => {\n    console.log(title);\n    lastRef.current >= index && proRef.current[index].current.restoreCard();\n  };\n\n  // Regret button\n  const goBack = async () => {\n    const newIndex = last + 1;\n    updateIndex(newIndex);\n    await proRef.current[newIndex].current.restoreCard();\n  };\n\n  // Reset queue\n  const reset = () => {\n    setRefresh(!refresh);\n    setCardContainerKey(prevKey => prevKey + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: resultQueue.current && resultQueue.current.map((project, index) => /*#__PURE__*/_jsxDEV(TinderCard, {\n        ref: proRef.current[index],\n        onSwipe: () => updateIndex(index - 1),\n        onCardLeftScreen: () => outOfFrame(project.title, index),\n        preventSwipe: \"down\",\n        className: \"cards\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"creator\",\n            children: [\"Creator: \", project.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: project.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text mb-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-people\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this), \" Teammates: \", project.nums]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tags\",\n              children: project.tags.map(tag => {\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"card-tag badge bg-primary\",\n                  children: tag\n                }, tag, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 26\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-des\",\n            children: project.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, project._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this))\n    }, cardContainerKey, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goBack,\n      className: \"button-51\",\n      children: \"Regret button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: reset,\n      className: \"button-51\",\n      children: \"Show results again?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectCard, \"2ddILL9EVx++ZcVfV2Tte+yX3Ko=\", false, function () {\n  return [useProjectsContext, useAuthContext];\n});\n_c = ProjectCard;\nexport default ProjectCard;\nvar _c;\n$RefreshReg$(_c, \"ProjectCard\");","map":{"version":3,"names":["styles","React","TinderCard","useEffect","useState","useRef","useProjectsContext","useAuthContext","ProjectCard","projects","dispatch","user","resultQueue","lastRef","last","setlast","proRef","cardContainerKey","setCardContainerKey","refresh","setRefresh","fetchProjects","response","fetch","headers","token","json","ok","type","payload","console","log","Array","isArray","current","length","fill","map","i","createRef","updateIndex","val","outOfFrame","title","index","restoreCard","goBack","newIndex","reset","prevKey","project","email","nums","tags","tag","description","_id"],"sources":["/Users/jiashunli/Desktop/legendary-waffle/Mern Stack/frontend/src/components/ProjectCard.js"],"sourcesContent":["import styles from \"./projectCard.css\"\nimport React from \"react\"\nimport TinderCard from 'react-tinder-card'\nimport { useEffect, useState, useRef }from 'react'\nimport { useProjectsContext } from \"../hooks/useProjectsContext\"\nimport { useAuthContext } from \"../hooks/useAuthContext\"\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'bootstrap-icons/font/bootstrap-icons.css'\n\nconst ProjectCard = () => {\n\n  // Authentication & Projects\n  const {projects, dispatch} = useProjectsContext()\n  const {user} = useAuthContext()\n\n  // Store query from database\n  const resultQueue = useRef([])\n\n  // Store reference & value of index to the last element of current queue\n  const lastRef = useRef(0)\n  const [last, setlast] = useState(0)\n\n  // Store reference to the TinderCard compoenents\n  const proRef = useRef([])\n\n  // Helpers for re-rendering & refetching\n  const [cardContainerKey, setCardContainerKey] = useState(0);\n  const [refresh, setRefresh] = useState(true)\n\n  // Refresh the queue on refreshing the page\n  useEffect(() =>  {\n\n    // Fetch all projects\n    const fetchProjects = async () => {\n      const response = await fetch('/api/projects', {\n        headers: {'Authorization': `Bearer ${user.token}`},\n      })\n      const json = await response.json()\n\n      if (response.ok) {\n        dispatch({type: 'SET_PROJECTS', payload: json})\n      }\n    }\n\n    if (user) {\n      console.log(\"fetching all projects\")\n        fetchProjects()\n      }\n  }, [user, refresh])\n\n\n  // Set the queues\n  useEffect(() => {\n    if (Array.isArray(projects)){\n      console.log(\"updating queues\")\n      resultQueue.current = projects\n      lastRef.current = projects.length - 1 \n      setlast(lastRef)\n      proRef.current = Array(projects.length).fill(0).map((i) => React.createRef())\n    }\n  }, [projects])\n\n\n  // Update current index\n  const updateIndex = (val) => {\n    lastRef.current = val\n    setlast(val)\n  }\n\n  // When card leaves the screen\n  const outOfFrame = (title, index) => {\n    console.log(title)\n    lastRef.current >= index && proRef.current[index].current.restoreCard()\n  }\n  \n  // Regret button\n  const goBack = async () => {\n    const newIndex = last + 1\n    updateIndex(newIndex)\n    await proRef.current[newIndex].current.restoreCard()\n  }\n\n  // Reset queue\n  const reset = () => {\n    setRefresh(!refresh)\n    setCardContainerKey(prevKey => prevKey + 1);\n  }\n\n  return (\n    \n    <div>\n      <div className=\"card-container\" key={cardContainerKey}>\n      {resultQueue.current && resultQueue.current.map((project, index) =>\n        <TinderCard key={project._id} \n          ref = {proRef.current[index]}\n          onSwipe ={() => updateIndex(index - 1)} \n          onCardLeftScreen = {() => outOfFrame(project.title, index)}\n          preventSwipe={\"down\"} \n          className=\"cards\"\n          >\n          <div className=\"card-body\">\n          <h5 className=\"creator\">Creator: {project.email}</h5>\n            <h5 className=\"card-title\">{project.title}</h5>\n            <div className=\"d-flex justify-content-between\">\n              <p className=\"card-text mb-0\">\n                <i className=\"bi bi-people\"></i> Teammates: {project.nums}\n              </p>\n              <div className=\"tags\">\n                {project.tags.map(tag => {\n                  return <span key={tag} className=\"card-tag badge bg-primary\">\n                    {tag}\n                  </span>\n                })}\n              </div>\n            </div>\n            <hr />\n            <p className=\"card-des\">{project.description}</p>\n          </div>\n      </TinderCard>\n    )}\n\n    </div>\n\n        <button onClick={goBack} className=\"button-51\">Regret button</button>\n        <button onClick={reset} className=\"button-51\">Show results again?</button>\n    \n    </div>\n  )\n\n}\n\nexport default ProjectCard"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}