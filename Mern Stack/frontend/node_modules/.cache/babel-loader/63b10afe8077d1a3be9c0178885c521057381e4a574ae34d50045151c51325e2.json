{"ast":null,"code":"var _jsxFileName = \"/Users/jiashunli/Desktop/legendary-waffle/Mern Stack/frontend/src/components/ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams, NavLink } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Box from '@mui/material/Box';\nimport validator from 'validator';\nimport './PasswordReset.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const {\n    email,\n    token\n  } = useParams();\n  const history = useNavigate();\n  const [data2, setData] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const userValid = async () => {\n    const res = await fetch(`/api/user/forgotpassword/${email}/${token}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await res.json();\n    if (data.status === 201) {\n      console.log(\"user valid\");\n    } else {\n      console.log(\"user invalid\");\n      history(\"*\");\n    }\n  };\n  const setval = e => {\n    setPassword(e.target.value);\n  };\n  const sendpassword = async e => {\n    e.preventDefault();\n    if (password === \"\") {\n      toast.error(\"password is required!\", {\n        position: \"top-center\"\n      });\n    } else if (!validator.isStrongPassword(password)) {\n      toast.error('Password not strong enough. Password must contain a combination of uppercase letters, lowercase letters, numbers, and symbols.');\n    } else {\n      const res = await fetch(`/api/user/${email}/${token}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          password\n        })\n      });\n      const data = await res.json();\n      if (data.status === 201) {\n        setPassword(\"\");\n        setMessage(true);\n      } else {\n        toast.error(\"Token Expired\", {\n          position: \"top-center\"\n        });\n      }\n    }\n  };\n  useEffect(() => {\n    userValid();\n    setTimeout(() => {\n      setData(true);\n    }, 2000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data2 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_data\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_heading\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Enter Your NEW Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [message ? /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"green\",\n                fontWeight: \"bold\"\n              },\n              children: \"Password Successfully Updated \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 48\n            }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_input\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"New password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                value: password,\n                onChange: setval,\n                name: \"password\",\n                id: \"password\",\n                placeholder: \"Enter Your new password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: sendpassword,\n              children: \"Change password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/login\",\n              children: \"Back to Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\"\n      },\n      children: \"Loading... \\xA0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }, this)\n  }, void 0, false);\n};\n_s(ForgotPassword, \"eEpPfdesKYT73eYHhM1uIR8/I8s=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","NavLink","ToastContainer","toast","Box","validator","ForgotPassword","email","token","history","data2","setData","password","setPassword","message","setMessage","userValid","res","fetch","method","headers","data","json","status","console","log","setval","e","target","value","sendpassword","preventDefault","error","position","isStrongPassword","body","JSON","stringify","setTimeout","color","fontWeight","display","justifyContent","alignItems","height"],"sources":["/Users/jiashunli/Desktop/legendary-waffle/Mern Stack/frontend/src/components/ForgotPassword.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useNavigate, useParams, NavLink } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Box from '@mui/material/Box';\nimport validator from 'validator'\nimport './PasswordReset.css'\n\nconst ForgotPassword = () => {\n\n    const { email, token } = useParams();\n\n    const history = useNavigate();\n\n    const [data2, setData] = useState(false);\n\n    const [password, setPassword] = useState(\"\");\n\n    const [message, setMessage] = useState(\"\");\n\n    const userValid = async () => {\n        const res = await fetch(`/api/user/forgotpassword/${email}/${token}`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n\n        const data = await res.json()\n\n        if (data.status === 201) {\n            console.log(\"user valid\")\n        } else {\n            console.log(\"user invalid\")\n            history(\"*\")\n        }\n    }\n\n\n    const setval = (e) => {\n        setPassword(e.target.value)\n    }\n\n    const sendpassword = async (e) => {\n        e.preventDefault();\n\n\n        if (password === \"\") {\n            toast.error(\"password is required!\", {\n                position: \"top-center\"\n            });\n        } else if (!validator.isStrongPassword(password)) {\n            toast.error('Password not strong enough. Password must contain a combination of uppercase letters, lowercase letters, numbers, and symbols.')\n        } else {\n            const res = await fetch(`/api/user/${email}/${token}`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({ password })\n            });\n\n            const data = await res.json()\n\n            if (data.status === 201) {\n                setPassword(\"\")\n                setMessage(true)\n            } else {\n                toast.error(\"Token Expired\",{\n                    position: \"top-center\"\n                })\n            }\n        }\n    }\n\n    useEffect(() => {\n        userValid()\n        setTimeout(() => {\n            setData(true)\n        }, 2000)\n    }, [])\n\n    return (\n        <>\n            {\n                data2 ? (\n                    <>\n                        <section>\n                            <div className=\"form_data\">\n                                <div className=\"form_heading\">\n                                    <h1>Enter Your NEW Password</h1>\n                                </div>\n\n                                <form>\n                                    {message ? <p style={{ color: \"green\", fontWeight: \"bold\" }}>Password Successfully Updated </p> : \"\"}\n                                    <div className=\"form_input\">\n                                        <label htmlFor=\"password\">New password</label>\n                                        <input type=\"password\" value={password} onChange={setval} name=\"password\" id=\"password\" placeholder='Enter Your new password' />\n                                    </div>\n\n                                    <button className='btn' onClick={sendpassword}>Change password</button>\n                                </form>\n                                <p><NavLink to=\"/login\">Back to Login</NavLink></p>\n                                <ToastContainer />\n                            </div>\n                        </section>\n                    </>\n                ) : <Box sx={{ display: 'flex', justifyContent: \"center\", alignItems: \"center\", height: \"100vh\" }}>\n                    Loading... &nbsp;\n                </Box>\n            }\n        </>\n    )\n}\n\nexport default ForgotPassword"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}