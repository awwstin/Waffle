{"ast":null,"code":"var _jsxFileName = \"/Users/jiashunli/Desktop/legendary-waffle/Mern Stack/frontend/src/pages/Chatroom.js\",\n  _s = $RefreshSig$();\nimport \"./Chatroom.css\";\nimport { useEffect, useState } from \"react\";\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatroom(_ref) {\n  _s();\n  let {\n    socket\n  } = _ref;\n  const {\n    user\n  } = useAuthContext();\n  const [room, setRoom] = useState(\"\");\n  const [joined, setJoined] = useState(false);\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  const [roomList, setRoomList] = useState([]);\n  const location = useLocation();\n\n  // const [messageFetched, setMessageFetched] = useState(false)\n\n  // Function for fetching all the rooms current user is in\n  // Author: Junhao Hui\n  const fetchRooms = async () => {\n    const response = await fetch(\"api/user/room_num\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${user.token}`\n      }\n    });\n    const json = await response.json();\n    setRoomList(json);\n  };\n\n  // Function for fetching messages based on room number\n  // Author: Junhao Hui\n  const fetchMessages = async () => {\n    const response = await fetch('/api/message/' + room, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${user.token}`\n      }\n    });\n    const json = await response.json();\n    setMessageList(json);\n  };\n\n  // Function for storing new message into the database\n  // Author: Junhao Hui\n  const storeMessage = async messageData => {\n    const response = fetch('/api/message', {\n      method: 'POST',\n      body: JSON.stringify(messageData),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${user.token}`\n      }\n    });\n    const json = await response;\n  };\n\n  // Function for adding the current room number to current user\n  // Author: Junhao Hui\n  const addRoom = async () => {\n    const response = await fetch('/api/user/join_room', {\n      method: 'PATCH',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${user.token}`\n      },\n      body: JSON.stringify({\n        \"room_number\": room\n      })\n    });\n    const json = await response.json();\n    console.log(json.message);\n  };\n\n  // Join room based on user input. Also add the current room to user's backend data\n  // Author: Junhao Hui\n  const joinRoom = async () => {\n    if (room !== \"\") {\n      socket.emit(\"join_room\", room);\n      if (!roomList.includes(room)) {\n        if (location.state !== null) {\n          await addRoom();\n        }\n        setRoomList([...roomList, room]);\n      }\n      await fetchMessages();\n      setJoined(true);\n    }\n  };\n\n  // Leave Current Room\n  // Author: Junhao Hui\n  const leaveRoom = async () => {\n    const response = await fetch('/api/user/leave', {\n      method: 'PATCH',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${user.token}`\n      },\n      body: JSON.stringify({\n        \"room_num\": room\n      })\n    });\n    const json = await response.json();\n    setJoined(false);\n    setMessageList([]);\n    setRoom(\"\");\n    fetchRooms();\n  };\n\n  // Send Message; Store message in db; update current queue\n  // Author: Junhao Hui\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const messageData = {\n        room: room,\n        author: user.email,\n        message: currentMessage,\n        time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes()\n      };\n      await socket.emit(\"send_message\", messageData);\n      setMessageList(list => [...list, messageData]);\n      await storeMessage(messageData);\n      setCurrentMessage(\"\");\n    }\n  };\n  const reJoin = roomNumber => {\n    if (roomNumber !== room) {\n      setRoom(roomNumber);\n      setJoined(false);\n    }\n    joinRoom();\n  };\n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      setMessageList(list => [...list, data]);\n    });\n  }, [socket]);\n  useEffect(() => {\n    if (user) fetchRooms();\n  }, [user]);\n  useEffect(() => {\n    if (location.state && location.state.fromRedirect) {\n      console.log(\"Redirection success. Creating/fetching room for project: \" + location.state.proj_name);\n      const directed = async () => {\n        const response = await fetch(\"api/user/by_id\", {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${user.token}`\n          },\n          body: JSON.stringify({\n            \"proj_id\": location.state.proj_id,\n            \"author_email\": location.state.auth_email,\n            \"proj_name\": location.state.proj_name\n          })\n        });\n        const json = await response.json();\n        setRoom(json);\n        joinRoom();\n      };\n      if (user) fetchRooms();\n      directed();\n    }\n  }, [location]);\n  const handleRoomName = one_room => {\n    if (one_room.includes('|')) {\n      return one_room.split('|')[1] + \" - \" + one_room.split('|')[2];\n    } else {\n      return one_room;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room-name-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"joinChatContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Room ID...\",\n          onChange: e => setRoom(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: joinRoom,\n          children: \"Join A Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: joined ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: handleRoomName(room)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Join/Select Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        children: /*#__PURE__*/_jsxDEV(ScrollToBottom, {\n          className: \"message-container\",\n          children: messageList && messageList.map(messageContent => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message\",\n              id: user.email === messageContent.author ? \"you\" : \"other\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-content\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: messageContent.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-meta\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    id: \"time\",\n                    children: messageContent.time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    id: \"author\",\n                    children: messageContent.author\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 22\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: currentMessage,\n          placeholder: \"Spotlight's on you. Don't say anything bad plz\",\n          onChange: event => {\n            setCurrentMessage(event.target.value);\n          },\n          onKeyPress: event => {\n            event.key === \"Enter\" && sendMessage();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"\\u25BA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this), joined && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"leave\",\n      onClick: leaveRoom,\n      children: \"Leave Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 18\n    }, this), roomList.length !== 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"button-group-header\",\n      children: \"Double-click the buttons to join room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: roomList.length !== 0 && roomList.map(single_room => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => reJoin(single_room),\n          children: handleRoomName(single_room)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 23\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatroom, \"IfvyeAsBMHm4lukpwtPpO2/okx0=\", false, function () {\n  return [useAuthContext, useLocation];\n});\n_c = Chatroom;\nexport default Chatroom;\nvar _c;\n$RefreshReg$(_c, \"Chatroom\");","map":{"version":3,"names":["useEffect","useState","useAuthContext","ScrollToBottom","useLocation","Chatroom","socket","user","room","setRoom","joined","setJoined","currentMessage","setCurrentMessage","messageList","setMessageList","roomList","setRoomList","location","fetchRooms","response","fetch","method","headers","token","json","fetchMessages","storeMessage","messageData","body","JSON","stringify","addRoom","Authorization","console","log","message","joinRoom","emit","includes","state","leaveRoom","sendMessage","author","email","time","Date","now","getHours","getMinutes","list","reJoin","roomNumber","on","data","fromRedirect","proj_name","directed","proj_id","auth_email","handleRoomName","one_room","split","e","target","value","map","messageContent","event","key","length","single_room"],"sources":["/Users/jiashunli/Desktop/legendary-waffle/Mern Stack/frontend/src/pages/Chatroom.js"],"sourcesContent":["import \"./Chatroom.css\"\nimport { useEffect, useState } from \"react\";\nimport { useAuthContext } from \"../hooks/useAuthContext\"\nimport ScrollToBottom from \"react-scroll-to-bottom\"\nimport { useLocation } from 'react-router-dom';\n\n\nfunction Chatroom({socket}) {\n\n  const { user } = useAuthContext()\n\n  const [room, setRoom] = useState(\"\")\n\n  const [joined, setJoined] = useState(false)\n\n  const [currentMessage, setCurrentMessage] = useState(\"\")\n\n  const [messageList, setMessageList] = useState([])\n\n  const [roomList, setRoomList] = useState([])\n\n  const location = useLocation()\n\n  // const [messageFetched, setMessageFetched] = useState(false)\n  \n  // Function for fetching all the rooms current user is in\n  // Author: Junhao Hui\n  const fetchRooms = async () => {\n    const response = await fetch(\"api/user/room_num\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${user.token}`\n      }\n    })\n\n    const json = await response.json()\n    setRoomList(json)\n  }\n\n  // Function for fetching messages based on room number\n  // Author: Junhao Hui\n  const fetchMessages = async () => {\n    const response = await fetch('/api/message/' + room, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${user.token}`\n      },\n    })\n\n    const json = await response.json()\n    setMessageList(json)\n  }\n\n  // Function for storing new message into the database\n  // Author: Junhao Hui\n  const storeMessage = async (messageData) => {\n\n    const response = fetch('/api/message', {\n        method: 'POST',\n        body: JSON.stringify(messageData),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${user.token}`\n        }\n      })\n\n    const json = await response\n  } \n\n  // Function for adding the current room number to current user\n  // Author: Junhao Hui\n  const addRoom = async () => {\n\n    const response = await fetch('/api/user/join_room', {\n      method: 'PATCH',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${user.token}`,\n      },\n      body: JSON.stringify({ \"room_number\": room })\n    })\n\n    const json = await response.json()\n    console.log(json.message)\n  }\n\n  // Join room based on user input. Also add the current room to user's backend data\n  // Author: Junhao Hui\n  const joinRoom = async () => {\n    if (room !== \"\") {\n      socket.emit(\"join_room\", room)\n      if (!roomList.includes(room)){\n        if (location.state !== null){\n          await addRoom()\n        }\n        setRoomList([...roomList, room])\n      }\n      await fetchMessages()\n      setJoined(true)\n    } \n  }\n  \n  // Leave Current Room\n  // Author: Junhao Hui\n  const leaveRoom = async () => {\n\n    const response = await fetch('/api/user/leave', {\n      method: 'PATCH',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${user.token}`,\n      },\n      body: JSON.stringify({ \"room_num\" : room })\n    })\n\n    const json = await response.json()\n    setJoined(false)\n    setMessageList([])\n    setRoom(\"\")\n    fetchRooms()\n  }\n\n  // Send Message; Store message in db; update current queue\n  // Author: Junhao Hui\n  const sendMessage = async () => {\n\n    if (currentMessage !== \"\"){\n      const messageData = {\n        room: room, \n        author: user.email,\n        message: currentMessage,\n        time: \n          new Date(Date.now()).getHours() + \n          \":\" + \n          new Date(Date.now()).getMinutes()\n      }\n\n      await socket.emit(\"send_message\", messageData)\n      setMessageList((list) => [...list, messageData]);\n      await storeMessage(messageData)\n      setCurrentMessage(\"\")\n    }\n  }\n\n  const reJoin = (roomNumber) => {\n    if (roomNumber !== room){\n      setRoom(roomNumber)\n      setJoined(false)\n    }\n    joinRoom() \n  }\n\n  useEffect(() =>{\n    socket.on(\"receive_message\", (data) => {\n        setMessageList((list) => [...list, data])\n    })\n  }, [socket])\n\n  useEffect(() => {\n    if (user)\n      fetchRooms()\n  }, [user])\n\n  useEffect(() => {\n    if (location.state && location.state.fromRedirect) {\n      console.log(\"Redirection success. Creating/fetching room for project: \" + location.state.proj_name )\n      const directed = async () => {\n          const response = await fetch(\"api/user/by_id\", {\n            method:'PATCH',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${user.token}`\n            },\n            body: JSON.stringify({ \"proj_id\": location.state.proj_id, \"author_email\": location.state.auth_email, \"proj_name\": location.state.proj_name})\n          })\n        \n        const json = await response.json()\n        setRoom(json)\n        joinRoom()\n      }\n      if (user)\n        fetchRooms()\n        directed()\n\n    }\n  }, [location]);\n\n  const handleRoomName = (one_room) => {\n    if (one_room.includes('|')){\n      return one_room.split('|')[1] + \" - \" +  one_room.split('|')[2]\n    } else {\n      return one_room\n    }\n    \n  }\n\n  return (\n    <div className=\"chat-app-container\">\n    \n      <div className=\"room-name-container\">\n\n        <div className=\"joinChatContainer\">\n          <input\n            type=\"text\"\n            placeholder=\"Room ID...\"\n            onChange={(e) => setRoom(e.target.value)}\n            />\n            <button onClick={joinRoom}>Join A Room</button>\n        </div>\n\n        \n      </div>\n\n   \n        <div className=\"chat-window\">\n          <div className=\"chat-header\">\n            {joined ? <p>{handleRoomName(room)}</p> : <p>Join/Select Room</p> }\n          </div>\n          <div className=\"chat-body\">\n            <ScrollToBottom className=\"message-container\">\n              {messageList && messageList.map((messageContent) => {\n                return (\n                  <div\n                    className=\"message\"\n                    id={user.email === messageContent.author ? \"you\" : \"other\"}\n                  >\n                    <div>\n                      <div className=\"message-content\">\n                        <p>{messageContent.message}</p>\n                     </div>\n                     <div className=\"message-meta\">\n                        <p id=\"time\">{messageContent.time}</p>\n                        <p id=\"author\">{messageContent.author}</p>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </ScrollToBottom>\n\n        </div>\n          <div className=\"chat-footer\">\n            <input\n              type=\"text\"\n              value={currentMessage}\n              placeholder=\"Spotlight's on you. Don't say anything bad plz\"\n              onChange={(event) => {\n                setCurrentMessage(event.target.value);\n              }}\n              onKeyPress={(event) => {\n                event.key === \"Enter\" && sendMessage();\n              }}\n            />\n            <button onClick={sendMessage}>&#9658;</button>\n          </div>\n      </div>\n      {joined && <button className=\"leave\" onClick={leaveRoom}>Leave Room</button>}\n\n      {roomList.length !== 0 && <h2 className=\"button-group-header\">Double-click the buttons to join room</h2>}\n      <div className=\"button-group\">\n          {roomList.length !== 0 && roomList.map((single_room) => {\n              return (<button onClick={() => reJoin(single_room)}>{handleRoomName(single_room)}</button>)\n            })}\n        </div>\n\n    </div>\n\n    \n  );\n}\n\nexport default Chatroom"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}