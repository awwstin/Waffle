{"ast":null,"code":"import _toConsumableArray from\"/Users/jiashunli/Desktop/legendary-waffle/Mern Stack/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"/Users/jiashunli/Desktop/legendary-waffle/Mern Stack/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/jiashunli/Desktop/legendary-waffle/Mern Stack/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/jiashunli/Desktop/legendary-waffle/Mern Stack/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import\"./Chatroom.css\";import{useEffect,useState}from\"react\";import{useAuthContext}from\"../hooks/useAuthContext\";import ScrollToBottom from\"react-scroll-to-bottom\";import{useLocation}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Chatroom(_ref){var socket=_ref.socket;var _useAuthContext=useAuthContext(),user=_useAuthContext.user;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),room=_useState2[0],setRoom=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),joined=_useState4[0],setJoined=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),currentMessage=_useState6[0],setCurrentMessage=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),messageList=_useState8[0],setMessageList=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),roomList=_useState10[0],setRoomList=_useState10[1];var location=useLocation();// const [messageFetched, setMessageFetched] = useState(false)\n// Function for fetching all the rooms current user is in\n// Author: Junhao Hui\nvar fetchRooms=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,json;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"api/user/room_num\",{method:'GET',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(user.token)}});case 2:response=_context.sent;_context.next=5;return response.json();case 5:json=_context.sent;setRoomList(json);case 7:case\"end\":return _context.stop();}},_callee);}));return function fetchRooms(){return _ref2.apply(this,arguments);};}();// Function for fetching messages based on room number\n// Author: Junhao Hui\nvar fetchMessages=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var response,json;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch('/api/message/'+room,{method:'GET',headers:{'Authorization':\"Bearer \".concat(user.token)}});case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:json=_context2.sent;setMessageList(json);case 7:case\"end\":return _context2.stop();}},_callee2);}));return function fetchMessages(){return _ref3.apply(this,arguments);};}();// Function for storing new message into the database\n// Author: Junhao Hui\nvar storeMessage=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(messageData){var response,json;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:response=fetch('/api/message',{method:'POST',body:JSON.stringify(messageData),headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(user.token)}});_context3.next=3;return response;case 3:json=_context3.sent;case 4:case\"end\":return _context3.stop();}},_callee3);}));return function storeMessage(_x){return _ref4.apply(this,arguments);};}();// Function for adding the current room number to current user\n// Author: Junhao Hui\nvar addRoom=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){var response,json;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.next=2;return fetch('/api/user/join_room',{method:'PATCH',headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(user.token)},body:JSON.stringify({\"room_number\":room})});case 2:response=_context4.sent;_context4.next=5;return response.json();case 5:json=_context4.sent;console.log(json.message);case 7:case\"end\":return _context4.stop();}},_callee4);}));return function addRoom(){return _ref5.apply(this,arguments);};}();// Join room based on user input. Also add the current room to user's backend data\n// Author: Junhao Hui\nvar joinRoom=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(){return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:if(!(room!==\"\")){_context5.next=10;break;}socket.emit(\"join_room\",room);if(roomList.includes(room)){_context5.next=7;break;}if(!(location.state!==null)){_context5.next=6;break;}_context5.next=6;return addRoom();case 6:setRoomList([].concat(_toConsumableArray(roomList),[room]));case 7:_context5.next=9;return fetchMessages();case 9:setJoined(true);case 10:case\"end\":return _context5.stop();}},_callee5);}));return function joinRoom(){return _ref6.apply(this,arguments);};}();// Leave Current Room\n// Author: Junhao Hui\nvar leaveRoom=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(){var response,json;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:_context6.next=2;return fetch('/api/user/leave',{method:'PATCH',headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(user.token)},body:JSON.stringify({\"room_num\":room})});case 2:response=_context6.sent;_context6.next=5;return response.json();case 5:json=_context6.sent;setJoined(false);setMessageList([]);setRoom(\"\");fetchRooms();case 10:case\"end\":return _context6.stop();}},_callee6);}));return function leaveRoom(){return _ref7.apply(this,arguments);};}();// Send Message; Store message in db; update current queue\n// Author: Junhao Hui\nvar sendMessage=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(){var messageData;return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1)switch(_context7.prev=_context7.next){case 0:if(!(currentMessage!==\"\")){_context7.next=8;break;}messageData={room:room,author:user.email,message:currentMessage,time:new Date(Date.now()).getHours()+\":\"+new Date(Date.now()).getMinutes()};_context7.next=4;return socket.emit(\"send_message\",messageData);case 4:setMessageList(function(list){return[].concat(_toConsumableArray(list),[messageData]);});_context7.next=7;return storeMessage(messageData);case 7:setCurrentMessage(\"\");case 8:case\"end\":return _context7.stop();}},_callee7);}));return function sendMessage(){return _ref8.apply(this,arguments);};}();var reJoin=function reJoin(roomNumber){if(roomNumber!==room){setRoom(roomNumber);setJoined(false);}joinRoom();};useEffect(function(){socket.on(\"receive_message\",function(data){setMessageList(function(list){return[].concat(_toConsumableArray(list),[data]);});});},[socket]);useEffect(function(){if(user)fetchRooms();},[user]);useEffect(function(){if(location.state&&location.state.fromRedirect){console.log(\"Redirection success. Creating/fetching room for project: \"+location.state.proj_name);var directed=/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(){var response,json;return _regeneratorRuntime().wrap(function _callee8$(_context8){while(1)switch(_context8.prev=_context8.next){case 0:_context8.next=2;return fetch(\"api/user/by_id\",{method:'PATCH',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(user.token)},body:JSON.stringify({\"proj_id\":location.state.proj_id,\"author_email\":location.state.auth_email,\"proj_name\":location.state.proj_name})});case 2:response=_context8.sent;_context8.next=5;return response.json();case 5:json=_context8.sent;setRoom(json);joinRoom();case 8:case\"end\":return _context8.stop();}},_callee8);}));return function directed(){return _ref9.apply(this,arguments);};}();if(user)fetchRooms();directed();}},[location]);var handleRoomName=function handleRoomName(one_room){if(one_room.includes('|')){return one_room.split('|')[1]+\" - \"+one_room.split('|')[2];}else{return one_room;}};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-app-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"room-name-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"joinChatContainer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Room ID...\",onChange:function onChange(e){return setRoom(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{onClick:joinRoom,children:\"Join A Room\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-window\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-header\",children:joined?/*#__PURE__*/_jsx(\"p\",{children:handleRoomName(room)}):/*#__PURE__*/_jsx(\"p\",{children:\"Join/Select Room\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-body\",children:/*#__PURE__*/_jsx(ScrollToBottom,{className:\"message-container\",children:messageList&&messageList.map(function(messageContent){return/*#__PURE__*/_jsx(\"div\",{className:\"message\",id:user.email===messageContent.author?\"you\":\"other\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-content\",children:/*#__PURE__*/_jsx(\"p\",{children:messageContent.message})}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-meta\",children:[/*#__PURE__*/_jsx(\"p\",{id:\"time\",children:messageContent.time}),/*#__PURE__*/_jsx(\"p\",{id:\"author\",children:messageContent.author})]})]})});})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-footer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:currentMessage,placeholder:\"Spotlight's on you. Don't say anything bad plz\",onChange:function onChange(event){setCurrentMessage(event.target.value);},onKeyPress:function onKeyPress(event){event.key===\"Enter\"&&sendMessage();}}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,children:\"\\u25BA\"})]})]}),joined&&/*#__PURE__*/_jsx(\"button\",{className:\"leave\",onClick:leaveRoom,children:\"Leave Room\"}),roomList.length!==0&&/*#__PURE__*/_jsx(\"h2\",{className:\"button-group-header\",children:\"Double-click the buttons to join room\"}),/*#__PURE__*/_jsx(\"div\",{className:\"button-group\",children:roomList.length!==0&&roomList.map(function(single_room){return/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return reJoin(single_room);},children:handleRoomName(single_room)});})})]});}export default Chatroom;","map":{"version":3,"names":["useEffect","useState","useAuthContext","ScrollToBottom","useLocation","Chatroom","socket","user","room","setRoom","joined","setJoined","currentMessage","setCurrentMessage","messageList","setMessageList","roomList","setRoomList","location","fetchRooms","fetch","method","headers","token","response","json","fetchMessages","storeMessage","messageData","body","JSON","stringify","addRoom","Authorization","console","log","message","joinRoom","emit","includes","state","leaveRoom","sendMessage","author","email","time","Date","now","getHours","getMinutes","list","reJoin","roomNumber","on","data","fromRedirect","proj_name","directed","proj_id","auth_email","handleRoomName","one_room","split","e","target","value","map","messageContent","event","key","length","single_room"],"sources":["/Users/jiashunli/Desktop/legendary-waffle/Mern Stack/frontend/src/pages/Chatroom.js"],"sourcesContent":["import \"./Chatroom.css\"\nimport { useEffect, useState } from \"react\";\nimport { useAuthContext } from \"../hooks/useAuthContext\"\nimport ScrollToBottom from \"react-scroll-to-bottom\"\nimport { useLocation } from 'react-router-dom';\n\n\nfunction Chatroom({socket}) {\n\n  const { user } = useAuthContext()\n\n  const [room, setRoom] = useState(\"\")\n\n  const [joined, setJoined] = useState(false)\n\n  const [currentMessage, setCurrentMessage] = useState(\"\")\n\n  const [messageList, setMessageList] = useState([])\n\n  const [roomList, setRoomList] = useState([])\n\n  const location = useLocation()\n\n  // const [messageFetched, setMessageFetched] = useState(false)\n  \n  // Function for fetching all the rooms current user is in\n  // Author: Junhao Hui\n  const fetchRooms = async () => {\n    const response = await fetch(\"api/user/room_num\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${user.token}`\n      }\n    })\n\n    const json = await response.json()\n    setRoomList(json)\n  }\n\n  // Function for fetching messages based on room number\n  // Author: Junhao Hui\n  const fetchMessages = async () => {\n    const response = await fetch('/api/message/' + room, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${user.token}`\n      },\n    })\n\n    const json = await response.json()\n    setMessageList(json)\n  }\n\n  // Function for storing new message into the database\n  // Author: Junhao Hui\n  const storeMessage = async (messageData) => {\n\n    const response = fetch('/api/message', {\n        method: 'POST',\n        body: JSON.stringify(messageData),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${user.token}`\n        }\n      })\n\n    const json = await response\n  } \n\n  // Function for adding the current room number to current user\n  // Author: Junhao Hui\n  const addRoom = async () => {\n\n    const response = await fetch('/api/user/join_room', {\n      method: 'PATCH',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${user.token}`,\n      },\n      body: JSON.stringify({ \"room_number\": room })\n    })\n\n    const json = await response.json()\n    console.log(json.message)\n  }\n\n  // Join room based on user input. Also add the current room to user's backend data\n  // Author: Junhao Hui\n  const joinRoom = async () => {\n    if (room !== \"\") {\n      socket.emit(\"join_room\", room)\n      if (!roomList.includes(room)){\n        if (location.state !== null){\n          await addRoom()\n        }\n        setRoomList([...roomList, room])\n      }\n      await fetchMessages()\n      setJoined(true)\n    } \n  }\n  \n  // Leave Current Room\n  // Author: Junhao Hui\n  const leaveRoom = async () => {\n\n    const response = await fetch('/api/user/leave', {\n      method: 'PATCH',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${user.token}`,\n      },\n      body: JSON.stringify({ \"room_num\" : room })\n    })\n\n    const json = await response.json()\n    setJoined(false)\n    setMessageList([])\n    setRoom(\"\")\n    fetchRooms()\n  }\n\n  // Send Message; Store message in db; update current queue\n  // Author: Junhao Hui\n  const sendMessage = async () => {\n\n    if (currentMessage !== \"\"){\n      const messageData = {\n        room: room, \n        author: user.email,\n        message: currentMessage,\n        time: \n          new Date(Date.now()).getHours() + \n          \":\" + \n          new Date(Date.now()).getMinutes()\n      }\n\n      await socket.emit(\"send_message\", messageData)\n      setMessageList((list) => [...list, messageData]);\n      await storeMessage(messageData)\n      setCurrentMessage(\"\")\n    }\n  }\n\n  const reJoin = (roomNumber) => {\n    if (roomNumber !== room){\n      setRoom(roomNumber)\n      setJoined(false)\n    }\n    joinRoom() \n  }\n\n  useEffect(() =>{\n    socket.on(\"receive_message\", (data) => {\n        setMessageList((list) => [...list, data])\n    })\n  }, [socket])\n\n  useEffect(() => {\n    if (user)\n      fetchRooms()\n  }, [user])\n\n  useEffect(() => {\n    if (location.state && location.state.fromRedirect) {\n      console.log(\"Redirection success. Creating/fetching room for project: \" + location.state.proj_name )\n      const directed = async () => {\n          const response = await fetch(\"api/user/by_id\", {\n            method:'PATCH',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${user.token}`\n            },\n            body: JSON.stringify({ \"proj_id\": location.state.proj_id, \"author_email\": location.state.auth_email, \"proj_name\": location.state.proj_name})\n          })\n        \n        const json = await response.json()\n        setRoom(json)\n        joinRoom()\n      }\n      if (user)\n        fetchRooms()\n        directed()\n\n    }\n  }, [location]);\n\n  const handleRoomName = (one_room) => {\n    if (one_room.includes('|')){\n      return one_room.split('|')[1] + \" - \" +  one_room.split('|')[2]\n    } else {\n      return one_room\n    }\n    \n  }\n\n  return (\n    <div className=\"chat-app-container\">\n    \n      <div className=\"room-name-container\">\n\n        <div className=\"joinChatContainer\">\n          <input\n            type=\"text\"\n            placeholder=\"Room ID...\"\n            onChange={(e) => setRoom(e.target.value)}\n            />\n            <button onClick={joinRoom}>Join A Room</button>\n        </div>\n\n        \n      </div>\n\n   \n        <div className=\"chat-window\">\n          <div className=\"chat-header\">\n            {joined ? <p>{handleRoomName(room)}</p> : <p>Join/Select Room</p> }\n          </div>\n          <div className=\"chat-body\">\n            <ScrollToBottom className=\"message-container\">\n              {messageList && messageList.map((messageContent) => {\n                return (\n                  <div\n                    className=\"message\"\n                    id={user.email === messageContent.author ? \"you\" : \"other\"}\n                  >\n                    <div>\n                      <div className=\"message-content\">\n                        <p>{messageContent.message}</p>\n                     </div>\n                     <div className=\"message-meta\">\n                        <p id=\"time\">{messageContent.time}</p>\n                        <p id=\"author\">{messageContent.author}</p>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </ScrollToBottom>\n\n        </div>\n          <div className=\"chat-footer\">\n            <input\n              type=\"text\"\n              value={currentMessage}\n              placeholder=\"Spotlight's on you. Don't say anything bad plz\"\n              onChange={(event) => {\n                setCurrentMessage(event.target.value);\n              }}\n              onKeyPress={(event) => {\n                event.key === \"Enter\" && sendMessage();\n              }}\n            />\n            <button onClick={sendMessage}>&#9658;</button>\n          </div>\n      </div>\n      {joined && <button className=\"leave\" onClick={leaveRoom}>Leave Room</button>}\n\n      {roomList.length !== 0 && <h2 className=\"button-group-header\">Double-click the buttons to join room</h2>}\n      <div className=\"button-group\">\n          {roomList.length !== 0 && roomList.map((single_room) => {\n              return (<button onClick={() => reJoin(single_room)}>{handleRoomName(single_room)}</button>)\n            })}\n        </div>\n\n    </div>\n\n    \n  );\n}\n\nexport default Chatroom"],"mappings":"omBAAA,MAAO,gBAAgB,CACvB,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,OAASC,cAAc,KAAQ,yBAAyB,CACxD,MAAOC,eAAc,KAAM,wBAAwB,CACnD,OAASC,WAAW,KAAQ,kBAAkB,CAAC,wFAG/C,QAASC,SAAQ,MAAW,IAATC,OAAM,MAANA,MAAM,CAEvB,oBAAiBJ,cAAc,EAAE,CAAzBK,IAAI,iBAAJA,IAAI,CAEZ,cAAwBN,QAAQ,CAAC,EAAE,CAAC,wCAA7BO,IAAI,eAAEC,OAAO,eAEpB,eAA4BR,QAAQ,CAAC,KAAK,CAAC,yCAApCS,MAAM,eAAEC,SAAS,eAExB,eAA4CV,QAAQ,CAAC,EAAE,CAAC,yCAAjDW,cAAc,eAAEC,iBAAiB,eAExC,eAAsCZ,QAAQ,CAAC,EAAE,CAAC,yCAA3Ca,WAAW,eAAEC,cAAc,eAElC,eAAgCd,QAAQ,CAAC,EAAE,CAAC,0CAArCe,QAAQ,gBAAEC,WAAW,gBAE5B,GAAMC,SAAQ,CAAGd,WAAW,EAAE,CAE9B;AAEA;AACA;AACA,GAAMe,WAAU,6FAAG,4KACMC,MAAK,CAAC,mBAAmB,CAAE,CAChDC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,eAAe,kBAAYf,IAAI,CAACgB,KAAK,CACvC,CACF,CAAC,CAAC,QANIC,QAAQ,qCAQKA,SAAQ,CAACC,IAAI,EAAE,QAA5BA,IAAI,eACVR,WAAW,CAACQ,IAAI,CAAC,sDAClB,kBAXKN,WAAU,2CAWf,CAED;AACA;AACA,GAAMO,cAAa,6FAAG,kLACGN,MAAK,CAAC,eAAe,CAAGZ,IAAI,CAAE,CACnDa,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,eAAe,kBAAYf,IAAI,CAACgB,KAAK,CACvC,CACF,CAAC,CAAC,QALIC,QAAQ,uCAOKA,SAAQ,CAACC,IAAI,EAAE,QAA5BA,IAAI,gBACVV,cAAc,CAACU,IAAI,CAAC,wDACrB,kBAVKC,cAAa,2CAUlB,CAED;AACA;AACA,GAAMC,aAAY,6FAAG,kBAAOC,WAAW,yIAE/BJ,QAAQ,CAAGJ,KAAK,CAAC,cAAc,CAAE,CACnCC,MAAM,CAAE,MAAM,CACdQ,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACH,WAAW,CAAC,CACjCN,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,eAAe,kBAAYf,IAAI,CAACgB,KAAK,CACvC,CACF,CAAC,CAAC,wBAEeC,SAAQ,QAArBC,IAAI,uEACX,kBAZKE,aAAY,6CAYjB,CAED;AACA;AACA,GAAMK,QAAO,6FAAG,kLAESZ,MAAK,CAAC,qBAAqB,CAAE,CAClDC,MAAM,CAAE,OAAO,CACfC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClCW,aAAa,kBAAY1B,IAAI,CAACgB,KAAK,CACrC,CAAC,CACDM,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAE,aAAa,CAAEvB,IAAK,CAAC,CAC9C,CAAC,CAAC,QAPIgB,QAAQ,uCASKA,SAAQ,CAACC,IAAI,EAAE,QAA5BA,IAAI,gBACVS,OAAO,CAACC,GAAG,CAACV,IAAI,CAACW,OAAO,CAAC,wDAC1B,kBAbKJ,QAAO,2CAaZ,CAED;AACA;AACA,GAAMK,SAAQ,6FAAG,8IACX7B,IAAI,GAAK,EAAE,4BACbF,MAAM,CAACgC,IAAI,CAAC,WAAW,CAAE9B,IAAI,CAAC,IACzBQ,QAAQ,CAACuB,QAAQ,CAAC/B,IAAI,CAAC,+BACtBU,QAAQ,CAACsB,KAAK,GAAK,IAAI,kDACnBR,QAAO,EAAE,QAEjBf,WAAW,8BAAKD,QAAQ,GAAER,IAAI,GAAE,+BAE5BkB,cAAa,EAAE,QACrBf,SAAS,CAAC,IAAI,CAAC,yDAElB,kBAZK0B,SAAQ,2CAYb,CAED;AACA;AACA,GAAMI,UAAS,6FAAG,kLAEOrB,MAAK,CAAC,iBAAiB,CAAE,CAC9CC,MAAM,CAAE,OAAO,CACfC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClCW,aAAa,kBAAY1B,IAAI,CAACgB,KAAK,CACrC,CAAC,CACDM,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAE,UAAU,CAAGvB,IAAK,CAAC,CAC5C,CAAC,CAAC,QAPIgB,QAAQ,uCASKA,SAAQ,CAACC,IAAI,EAAE,QAA5BA,IAAI,gBACVd,SAAS,CAAC,KAAK,CAAC,CAChBI,cAAc,CAAC,EAAE,CAAC,CAClBN,OAAO,CAAC,EAAE,CAAC,CACXU,UAAU,EAAE,yDACb,kBAhBKsB,UAAS,2CAgBd,CAED;AACA;AACA,GAAMC,YAAW,6FAAG,8JAEd9B,cAAc,GAAK,EAAE,2BACjBgB,WAAW,CAAG,CAClBpB,IAAI,CAAEA,IAAI,CACVmC,MAAM,CAAEpC,IAAI,CAACqC,KAAK,CAClBR,OAAO,CAAExB,cAAc,CACvBiC,IAAI,CACF,GAAIC,KAAI,CAACA,IAAI,CAACC,GAAG,EAAE,CAAC,CAACC,QAAQ,EAAE,CAC/B,GAAG,CACH,GAAIF,KAAI,CAACA,IAAI,CAACC,GAAG,EAAE,CAAC,CAACE,UAAU,EACnC,CAAC,wBAEK3C,OAAM,CAACgC,IAAI,CAAC,cAAc,CAAEV,WAAW,CAAC,QAC9Cb,cAAc,CAAC,SAACmC,IAAI,qCAASA,IAAI,GAAEtB,WAAW,IAAC,CAAC,CAAC,uBAC3CD,aAAY,CAACC,WAAW,CAAC,QAC/Bf,iBAAiB,CAAC,EAAE,CAAC,wDAExB,kBAlBK6B,YAAW,2CAkBhB,CAED,GAAMS,OAAM,CAAG,QAATA,OAAM,CAAIC,UAAU,CAAK,CAC7B,GAAIA,UAAU,GAAK5C,IAAI,CAAC,CACtBC,OAAO,CAAC2C,UAAU,CAAC,CACnBzC,SAAS,CAAC,KAAK,CAAC,CAClB,CACA0B,QAAQ,EAAE,CACZ,CAAC,CAEDrC,SAAS,CAAC,UAAK,CACbM,MAAM,CAAC+C,EAAE,CAAC,iBAAiB,CAAE,SAACC,IAAI,CAAK,CACnCvC,cAAc,CAAC,SAACmC,IAAI,qCAASA,IAAI,GAAEI,IAAI,IAAC,CAAC,CAC7C,CAAC,CAAC,CACJ,CAAC,CAAE,CAAChD,MAAM,CAAC,CAAC,CAEZN,SAAS,CAAC,UAAM,CACd,GAAIO,IAAI,CACNY,UAAU,EAAE,CAChB,CAAC,CAAE,CAACZ,IAAI,CAAC,CAAC,CAEVP,SAAS,CAAC,UAAM,CACd,GAAIkB,QAAQ,CAACsB,KAAK,EAAItB,QAAQ,CAACsB,KAAK,CAACe,YAAY,CAAE,CACjDrB,OAAO,CAACC,GAAG,CAAC,2DAA2D,CAAGjB,QAAQ,CAACsB,KAAK,CAACgB,SAAS,CAAE,CACpG,GAAMC,SAAQ,6FAAG,kLACUrC,MAAK,CAAC,gBAAgB,CAAE,CAC7CC,MAAM,CAAC,OAAO,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,eAAe,kBAAYf,IAAI,CAACgB,KAAK,CACvC,CAAC,CACDM,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAE,SAAS,CAAEb,QAAQ,CAACsB,KAAK,CAACkB,OAAO,CAAE,cAAc,CAAExC,QAAQ,CAACsB,KAAK,CAACmB,UAAU,CAAE,WAAW,CAAEzC,QAAQ,CAACsB,KAAK,CAACgB,SAAS,CAAC,CAC7I,CAAC,CAAC,QAPIhC,QAAQ,uCASGA,SAAQ,CAACC,IAAI,EAAE,QAA5BA,IAAI,gBACVhB,OAAO,CAACgB,IAAI,CAAC,CACbY,QAAQ,EAAE,wDACX,kBAbKoB,SAAQ,2CAab,CACD,GAAIlD,IAAI,CACNY,UAAU,EAAE,CACZsC,QAAQ,EAAE,CAEd,CACF,CAAC,CAAE,CAACvC,QAAQ,CAAC,CAAC,CAEd,GAAM0C,eAAc,CAAG,QAAjBA,eAAc,CAAIC,QAAQ,CAAK,CACnC,GAAIA,QAAQ,CAACtB,QAAQ,CAAC,GAAG,CAAC,CAAC,CACzB,MAAOsB,SAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAG,KAAK,CAAID,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACjE,CAAC,IAAM,CACL,MAAOD,SAAQ,CACjB,CAEF,CAAC,CAED,mBACE,aAAK,SAAS,CAAC,oBAAoB,wBAEjC,YAAK,SAAS,CAAC,qBAAqB,uBAElC,aAAK,SAAS,CAAC,mBAAmB,wBAChC,cACE,IAAI,CAAC,MAAM,CACX,WAAW,CAAC,YAAY,CACxB,QAAQ,CAAE,kBAACE,CAAC,QAAKtD,QAAO,CAACsD,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,EAAC,EACvC,cACF,eAAQ,OAAO,CAAE5B,QAAS,UAAC,aAAW,EAAS,GAC7C,EAGF,cAGJ,aAAK,SAAS,CAAC,aAAa,wBAC1B,YAAK,SAAS,CAAC,aAAa,UACzB3B,MAAM,cAAG,mBAAIkD,cAAc,CAACpD,IAAI,CAAC,EAAK,cAAG,mBAAG,kBAAgB,EAAI,EAC7D,cACN,YAAK,SAAS,CAAC,WAAW,uBACxB,KAAC,cAAc,EAAC,SAAS,CAAC,mBAAmB,UAC1CM,WAAW,EAAIA,WAAW,CAACoD,GAAG,CAAC,SAACC,cAAc,CAAK,CAClD,mBACE,YACE,SAAS,CAAC,SAAS,CACnB,EAAE,CAAE5D,IAAI,CAACqC,KAAK,GAAKuB,cAAc,CAACxB,MAAM,CAAG,KAAK,CAAG,OAAQ,uBAE3D,oCACE,YAAK,SAAS,CAAC,iBAAiB,uBAC9B,mBAAIwB,cAAc,CAAC/B,OAAO,EAAK,EAC5B,cACN,aAAK,SAAS,CAAC,cAAc,wBAC1B,UAAG,EAAE,CAAC,MAAM,UAAE+B,cAAc,CAACtB,IAAI,EAAK,cACtC,UAAG,EAAE,CAAC,QAAQ,UAAEsB,cAAc,CAACxB,MAAM,EAAK,GACtC,GACF,EACF,CAEV,CAAC,CAAC,EACa,EAEf,cACJ,aAAK,SAAS,CAAC,aAAa,wBAC1B,cACE,IAAI,CAAC,MAAM,CACX,KAAK,CAAE/B,cAAe,CACtB,WAAW,CAAC,gDAAgD,CAC5D,QAAQ,CAAE,kBAACwD,KAAK,CAAK,CACnBvD,iBAAiB,CAACuD,KAAK,CAACJ,MAAM,CAACC,KAAK,CAAC,CACvC,CAAE,CACF,UAAU,CAAE,oBAACG,KAAK,CAAK,CACrBA,KAAK,CAACC,GAAG,GAAK,OAAO,EAAI3B,WAAW,EAAE,CACxC,CAAE,EACF,cACF,eAAQ,OAAO,CAAEA,WAAY,UAAC,QAAO,EAAS,GAC1C,GACJ,CACLhC,MAAM,eAAI,eAAQ,SAAS,CAAC,OAAO,CAAC,OAAO,CAAE+B,SAAU,UAAC,YAAU,EAAS,CAE3EzB,QAAQ,CAACsD,MAAM,GAAK,CAAC,eAAI,WAAI,SAAS,CAAC,qBAAqB,UAAC,uCAAqC,EAAK,cACxG,YAAK,SAAS,CAAC,cAAc,UACxBtD,QAAQ,CAACsD,MAAM,GAAK,CAAC,EAAItD,QAAQ,CAACkD,GAAG,CAAC,SAACK,WAAW,CAAK,CACpD,mBAAQ,eAAQ,OAAO,CAAE,yBAAMpB,OAAM,CAACoB,WAAW,CAAC,EAAC,UAAEX,cAAc,CAACW,WAAW,CAAC,EAAU,CAC5F,CAAC,CAAC,EACA,GAEJ,CAIV,CAEA,cAAelE,SAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}